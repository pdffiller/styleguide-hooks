#!/bin/bash

STYLE_GUIDE_LINK="https://github.com/pdffiller/styleguide-hooks#commit-message-format"
JIRA_ISSUE_LINK="https://pdffiller.atlassian.net/browse"


COMMIT_MSG_FILEPATH=$1
COMMIT_MSG_SOURCE=$2


run_rebase=$(git status)
if [[ $run_rebase == 'interactive rebase in progress'* ]] ; then
    exit 0
fi

# Figure out which branch we're on
BRANCH=$(git symbolic-ref --short HEAD)


# Get short description, then get 1 word from it, then make word lowercase
branch_change_1_word=$(echo ${BRANCH} | rev | cut -d'/' -f1 | rev | \
                       cut -d'_' -f1 | awk '{print tolower($0)}')


declare -A change_1_words=(
    ["add"]="Add"
    ["delete"]="Delete"
    ["change"]="Change"
    ["fix"]="Fix"
    ["update"]="Update"
    ["correct"]="Correct"
    ["test"]="Test"
)

COMMIT_TYPE=${change_1_words[${branch_change_1_word}]}

if [ -z "${COMMIT_TYPE}" ] ; then
    # Adding default commit message start keyword by branch name
    ISSUE_TYPE=$(echo ${BRANCH} | cut -d'/' -f1)

    declare -A ISSUE_TYPES=(
        ["feature"]="Add"
        ["improve"]=""
        ["fix"]="Fix"
        ["test"]=""
        ["docs"]=""
        ["style"]="Change"
        ["refactor"]="Refactor"
        ["legacy"]=""
    )

    COMMIT_TYPE=${ISSUE_TYPES[$ISSUE_TYPE]}
fi


# Populate the commit message with the jira issue #, if there is one
ISSUE_TEXT=""

THIRD_ARG=$(echo ${BRANCH} | cut -s -d'/' -f3)
if [ -n "${THIRD_ARG}" ] ; then
    ISSUE_NAME=$(echo ${BRANCH} | rev | cut -s -d'/' -f2 | rev)

    JIRA='^[A-Z]{2,}-[0-9]+' # Default format: https://tinyurl.com/yd48c5op
    if [[ ${ISSUE_NAME} =~ ${JIRA} ]] ; then
        ISSUE_TEXT="Issue: ${JIRA_ISSUE_LINK}/${ISSUE_NAME}"
    fi

    GITHUB='^[0-9]+$'
    if [[ ${ISSUE_NAME} =~ ${GITHUB} ]] ; then
        REPO=$(git remote get-url --push origin 2>/dev/null)

        if [ -z "${REPO}" ] ; then
            printf "Please, specify remote origin url.\n\n"
            echo   "git remote set-url add origin git@github.com:USERNAME/REPOSITORY.git"
            exit 1
        fi

        REPO=${REPO#"git@"}
        REPO=${REPO%".git"}
        REPO=$(echo ${REPO} | tr ':' '/')

        ISSUE_TEXT="Issue: https://${REPO}/issues/${ISSUE_NAME}"
    fi
fi


# Use commit message from `git commit -m`
if [[ $COMMIT_MSG_SOURCE == 'message' ]] ; then
    COMMIT_MSG=$(cat $COMMIT_MSG_FILEPATH)

    printf "$COMMIT_MSG\n\n${ISSUE_TEXT}" > ${COMMIT_MSG_FILEPATH}

    exit 0
fi


echo "${COMMIT_TYPE}

${ISSUE_TEXT}
# Our style guide can be found at: ${STYLE_GUIDE_LINK}

# Each commit message must begin with a capital letter beginning in it's basic form:
# : Add     :
# : Delete  :
# : Change  :
# : Fix     :
# : Update  :
# : Correct :
# : Test    :
# : ...     :
$(cat ${COMMIT_MSG_FILEPATH})" > ${COMMIT_MSG_FILEPATH}
